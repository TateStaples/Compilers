
state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	program	goto 153
	lvalue	goto 2
	exp	goto 1

	.	error


state 1:

	program : exp .  (reduce by rule 0)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 0


state 2:

	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 
	exp : lvalue .  (reduce by rule 37)
	exp : lvalue . ASSIGN exp 

	LBRACK	shift 28
	DOT	shift 27
	ASSIGN	shift 26


	.	reduce by rule 37


state 3:

	exp : NIL .  (reduce by rule 32)



	.	reduce by rule 32


state 4:

	exp : BREAK .  (reduce by rule 44)



	.	reduce by rule 44


state 5:

	exp : LET . decs IN exps END 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	decs	goto 32
	vardec	goto 31
	fundec	goto 30
	tydec	goto 29

	.	reduce by rule 4


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 36


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 37

	.	error


state 8:

	exp : IF . exp THEN exp 
	exp : IF . exp THEN exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 38

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 39

	.	error


state 10:

	exp : LPAREN . exps RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 41
	exps	goto 40

	.	reduce by rule 59


state 11:

	exp : STRING .  (reduce by rule 31)



	.	reduce by rule 31


state 12:

	exp : INT .  (reduce by rule 30)



	.	reduce by rule 30


state 13:

	lvalue : ID .  (reduce by rule 26)
	lvalue : ID . LBRACK exp RBRACK 
	exp : ID . LBRACK exp RBRACK OF exp 
	exp : ID . LBRACE recdecs RBRACE 
	exp : ID . LPAREN args RPAREN 

	LPAREN	shift 44
	LBRACK	shift 43
	LBRACE	shift 42


	.	reduce by rule 26


state 14:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 45

	.	error


state 15:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 46

	.	error


state 16:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 47

	.	error


state 17:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 48

	.	error


state 18:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 49

	.	error


state 19:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 50

	.	error


state 20:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 51

	.	error


state 21:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 52

	.	error


state 22:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 53

	.	error


state 23:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 54

	.	error


state 24:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 55

	.	error


state 25:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 56

	.	error


state 26:

	exp : lvalue ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 57

	.	error


state 27:

	lvalue : lvalue DOT . ID 

	ID	shift 58


	.	error


state 28:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 59

	.	error


state 29:

	decs : tydec . nontydecs 

	FUNCTION	shift 35
	VAR	shift 34

	vardec	goto 62
	nontydecs	goto 61
	fundec	goto 60

	.	reduce by rule 16


state 30:

	decs : fundec . nonfundecs 

	VAR	shift 34
	TYPE	shift 33

	vardec	goto 65
	nonfundecs	goto 64
	tydec	goto 63

	.	reduce by rule 13


state 31:

	decs : vardec . decs 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	decs	goto 66
	vardec	goto 31
	fundec	goto 30
	tydec	goto 29

	.	reduce by rule 4


state 32:

	exp : LET decs . IN exps END 

	IN	shift 67


	.	error


state 33:

	tydec : TYPE . ID EQ ty tydec 
	tydec : TYPE . ID EQ ty 

	ID	shift 68


	.	error


state 34:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 69


	.	error


state 35:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 70


	.	error


state 36:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 71


	.	error


state 37:

	exp : WHILE exp . DO exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	DO	shift 72


	.	error


state 38:

	exp : IF exp . THEN exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	THEN	shift 73


	.	error


state 39:

	exp : MINUS exp .  (reduce by rule 33)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 33


state 40:

	exp : LPAREN exps . RPAREN 

	RPAREN	shift 74


	.	error


state 41:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exps : exp . exps_end 

	SEMICOLON	shift 76
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14

	exps_end	goto 75

	.	reduce by rule 61


state 42:

	exp : ID LBRACE . recdecs RBRACE 

	ID	shift 78

	recdecs	goto 77

	.	reduce by rule 63


state 43:

	lvalue : ID LBRACK . exp RBRACK 
	exp : ID LBRACK . exp RBRACK OF exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 79

	.	error


state 44:

	exp : ID LPAREN . args RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 81
	args	goto 80

	.	reduce by rule 67


state 45:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 57)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15


	.	reduce by rule 57


state 46:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 56)
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	reduce by rule 56


state 47:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 54)
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 54
	COMMA	reduce by rule 54
	SEMICOLON	reduce by rule 54
	RPAREN	reduce by rule 54
	RBRACK	reduce by rule 54
	RBRACE	reduce by rule 54
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 54
	OR	reduce by rule 54
	THEN	reduce by rule 54
	ELSE	reduce by rule 54
	TO	reduce by rule 54
	DO	reduce by rule 54
	IN	reduce by rule 54
	END	reduce by rule 54
	FUNCTION	reduce by rule 54
	VAR	reduce by rule 54
	TYPE	reduce by rule 54


	.	error


state 48:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 52)
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 52
	COMMA	reduce by rule 52
	SEMICOLON	reduce by rule 52
	RPAREN	reduce by rule 52
	RBRACK	reduce by rule 52
	RBRACE	reduce by rule 52
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 52
	OR	reduce by rule 52
	THEN	reduce by rule 52
	ELSE	reduce by rule 52
	TO	reduce by rule 52
	DO	reduce by rule 52
	IN	reduce by rule 52
	END	reduce by rule 52
	FUNCTION	reduce by rule 52
	VAR	reduce by rule 52
	TYPE	reduce by rule 52


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 55)
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 55
	COMMA	reduce by rule 55
	SEMICOLON	reduce by rule 55
	RPAREN	reduce by rule 55
	RBRACK	reduce by rule 55
	RBRACE	reduce by rule 55
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 55
	OR	reduce by rule 55
	THEN	reduce by rule 55
	ELSE	reduce by rule 55
	TO	reduce by rule 55
	DO	reduce by rule 55
	IN	reduce by rule 55
	END	reduce by rule 55
	FUNCTION	reduce by rule 55
	VAR	reduce by rule 55
	TYPE	reduce by rule 55


	.	error


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 53)
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 53
	COMMA	reduce by rule 53
	SEMICOLON	reduce by rule 53
	RPAREN	reduce by rule 53
	RBRACK	reduce by rule 53
	RBRACE	reduce by rule 53
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 53
	OR	reduce by rule 53
	THEN	reduce by rule 53
	ELSE	reduce by rule 53
	TO	reduce by rule 53
	DO	reduce by rule 53
	IN	reduce by rule 53
	END	reduce by rule 53
	FUNCTION	reduce by rule 53
	VAR	reduce by rule 53
	TYPE	reduce by rule 53


	.	error


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 51)
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 51
	COMMA	reduce by rule 51
	SEMICOLON	reduce by rule 51
	RPAREN	reduce by rule 51
	RBRACK	reduce by rule 51
	RBRACE	reduce by rule 51
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 51
	OR	reduce by rule 51
	THEN	reduce by rule 51
	ELSE	reduce by rule 51
	TO	reduce by rule 51
	DO	reduce by rule 51
	IN	reduce by rule 51
	END	reduce by rule 51
	FUNCTION	reduce by rule 51
	VAR	reduce by rule 51
	TYPE	reduce by rule 51


	.	error


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 50)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 50
	COMMA	reduce by rule 50
	SEMICOLON	reduce by rule 50
	RPAREN	reduce by rule 50
	RBRACK	reduce by rule 50
	RBRACE	reduce by rule 50
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 50
	OR	reduce by rule 50
	THEN	reduce by rule 50
	ELSE	reduce by rule 50
	TO	reduce by rule 50
	DO	reduce by rule 50
	IN	reduce by rule 50
	END	reduce by rule 50
	FUNCTION	reduce by rule 50
	VAR	reduce by rule 50
	TYPE	reduce by rule 50


	.	error


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 49)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 49


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 48)
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 48


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 47)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 47


state 56:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 46)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 46


state 57:

	exp : lvalue ASSIGN exp .  (reduce by rule 39)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 39


state 58:

	lvalue : lvalue DOT ID .  (reduce by rule 27)



	.	reduce by rule 27


state 59:

	lvalue : lvalue LBRACK exp . RBRACK 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	RBRACK	shift 82
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	error


state 60:

	nontydecs : fundec . nonfundecs 

	VAR	shift 34
	TYPE	shift 33

	vardec	goto 65
	nonfundecs	goto 83
	tydec	goto 63

	.	reduce by rule 13


state 61:

	decs : tydec nontydecs .  (reduce by rule 2)



	.	reduce by rule 2


state 62:

	nontydecs : vardec . decs 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	decs	goto 84
	vardec	goto 31
	fundec	goto 30
	tydec	goto 29

	.	reduce by rule 4


state 63:

	nonfundecs : tydec . nontydecs 

	FUNCTION	shift 35
	VAR	shift 34

	vardec	goto 62
	nontydecs	goto 85
	fundec	goto 60

	.	reduce by rule 16


state 64:

	decs : fundec nonfundecs .  (reduce by rule 3)



	.	reduce by rule 3


state 65:

	nonfundecs : vardec . decs 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	decs	goto 86
	vardec	goto 31
	fundec	goto 30
	tydec	goto 29

	.	reduce by rule 4


state 66:

	decs : vardec decs .  (reduce by rule 1)



	.	reduce by rule 1


state 67:

	exp : LET decs IN . exps END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 41
	exps	goto 87

	.	reduce by rule 59


state 68:

	tydec : TYPE ID . EQ ty tydec 
	tydec : TYPE ID . EQ ty 

	EQ	shift 88


	.	error


state 69:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 90
	ASSIGN	shift 89


	.	error


state 70:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 91


	.	error


state 71:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 92

	.	error


state 72:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 93

	.	error


state 73:

	exp : IF exp THEN . exp 
	exp : IF exp THEN . exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 94

	.	error


state 74:

	exp : LPAREN exps RPAREN .  (reduce by rule 34)



	.	reduce by rule 34


state 75:

	exps : exp exps_end .  (reduce by rule 58)



	.	reduce by rule 58


state 76:

	exps_end : SEMICOLON . exp exps_end 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 95

	.	error


state 77:

	exp : ID LBRACE recdecs . RBRACE 

	RBRACE	shift 96


	.	error


state 78:

	recdecs : ID . EQ exp recdecs_end 

	EQ	shift 97


	.	error


state 79:

	lvalue : ID LBRACK exp . RBRACK 
	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	RBRACK	shift 98
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	error


state 80:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 99


	.	error


state 81:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	args : exp . args_end 

	COMMA	shift 101
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14

	args_end	goto 100

	.	reduce by rule 69


state 82:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 28)



	.	reduce by rule 28


state 83:

	nontydecs : fundec nonfundecs .  (reduce by rule 15)



	.	reduce by rule 15


state 84:

	nontydecs : vardec decs .  (reduce by rule 14)



	.	reduce by rule 14


state 85:

	nonfundecs : tydec nontydecs .  (reduce by rule 12)



	.	reduce by rule 12


state 86:

	nonfundecs : vardec decs .  (reduce by rule 11)



	.	reduce by rule 11


state 87:

	exp : LET decs IN exps . END 

	END	shift 102


	.	error


state 88:

	tydec : TYPE ID EQ . ty tydec 
	tydec : TYPE ID EQ . ty 

	ID	shift 106
	LBRACE	shift 105
	ARRAY	shift 104

	ty	goto 103

	.	error


state 89:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 107

	.	error


state 90:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 108


	.	error


state 91:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 110

	tyfields	goto 109

	.	reduce by rule 23


state 92:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	TO	shift 111


	.	error


state 93:

	exp : WHILE exp DO exp .  (reduce by rule 42)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 42


state 94:

	exp : IF exp THEN exp .  (reduce by rule 40)
	exp : IF exp THEN exp . ELSE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	ELSE	shift 112


	.	reduce by rule 40


state 95:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exps_end : SEMICOLON exp . exps_end 

	SEMICOLON	shift 76
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14

	exps_end	goto 113

	.	reduce by rule 61


state 96:

	exp : ID LBRACE recdecs RBRACE .  (reduce by rule 36)



	.	reduce by rule 36


state 97:

	recdecs : ID EQ . exp recdecs_end 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 114

	.	error


state 98:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 29)
	exp : ID LBRACK exp RBRACK . OF exp 

	OF	shift 115


	.	reduce by rule 29


state 99:

	exp : ID LPAREN args RPAREN .  (reduce by rule 38)



	.	reduce by rule 38


state 100:

	args : exp args_end .  (reduce by rule 66)



	.	reduce by rule 66


state 101:

	args_end : COMMA . exp args_end 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 116

	.	error


state 102:

	exp : LET decs IN exps END .  (reduce by rule 45)



	.	reduce by rule 45


state 103:

	tydec : TYPE ID EQ ty . tydec 
	tydec : TYPE ID EQ ty .  (reduce by rule 18)

	TYPE	shift 33

	tydec	goto 117

	.	reduce by rule 18


state 104:

	ty : ARRAY . OF ID 

	OF	shift 118


	.	error


state 105:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 110

	tyfields	goto 119

	.	reduce by rule 23


state 106:

	ty : ID .  (reduce by rule 19)



	.	reduce by rule 19


state 107:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 5)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 5


state 108:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 120


	.	error


state 109:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 121


	.	error


state 110:

	tyfields : ID . COLON ID tyfields_end 

	COLON	shift 122


	.	error


state 111:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 123

	.	error


state 112:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 124

	.	error


state 113:

	exps_end : SEMICOLON exp exps_end .  (reduce by rule 60)



	.	reduce by rule 60


state 114:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recdecs : ID EQ exp . recdecs_end 

	COMMA	shift 126
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14

	recdecs_end	goto 125

	.	reduce by rule 65


state 115:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 127

	.	error


state 116:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	args_end : COMMA exp . args_end 

	COMMA	shift 101
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14

	args_end	goto 128

	.	reduce by rule 69


state 117:

	tydec : TYPE ID EQ ty tydec .  (reduce by rule 17)



	.	reduce by rule 17


state 118:

	ty : ARRAY OF . ID 

	ID	shift 129


	.	error


state 119:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 130


	.	error


state 120:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 131

	.	error


state 121:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 133
	EQ	shift 132


	.	error


state 122:

	tyfields : ID COLON . ID tyfields_end 

	ID	shift 134


	.	error


state 123:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	DO	shift 135


	.	error


state 124:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 41)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 41


state 125:

	recdecs : ID EQ exp recdecs_end .  (reduce by rule 62)



	.	reduce by rule 62


state 126:

	recdecs_end : COMMA . ID EQ exp recdecs_end 

	ID	shift 136


	.	error


state 127:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 35)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 35


state 128:

	args_end : COMMA exp args_end .  (reduce by rule 68)



	.	reduce by rule 68


state 129:

	ty : ARRAY OF ID .  (reduce by rule 21)



	.	reduce by rule 21


state 130:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 20)



	.	reduce by rule 20


state 131:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 6)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 6


state 132:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 137

	.	error


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 138


	.	error


state 134:

	tyfields : ID COLON ID . tyfields_end 

	COMMA	shift 140

	tyfields_end	goto 139

	.	reduce by rule 25


state 135:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 141

	.	error


state 136:

	recdecs_end : COMMA ID . EQ exp recdecs_end 

	EQ	shift 142


	.	error


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp . fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 9)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	FUNCTION	shift 35

	fundec	goto 143

	.	reduce by rule 9


state 138:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 144


	.	error


state 139:

	tyfields : ID COLON ID tyfields_end .  (reduce by rule 22)



	.	reduce by rule 22


state 140:

	tyfields_end : COMMA . ID COLON ID tyfields_end 

	ID	shift 145


	.	error


state 141:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 43)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 43


state 142:

	recdecs_end : COMMA ID EQ . exp recdecs_end 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 146

	.	error


state 143:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp fundec .  (reduce by rule 7)



	.	reduce by rule 7


state 144:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	lvalue	goto 2
	exp	goto 147

	.	error


state 145:

	tyfields_end : COMMA ID . COLON ID tyfields_end 

	COLON	shift 148


	.	error


state 146:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recdecs_end : COMMA ID EQ exp . recdecs_end 

	COMMA	shift 126
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14

	recdecs_end	goto 149

	.	reduce by rule 65


state 147:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp . fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 10)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	FUNCTION	shift 35

	fundec	goto 150

	.	reduce by rule 10


state 148:

	tyfields_end : COMMA ID COLON . ID tyfields_end 

	ID	shift 151


	.	error


state 149:

	recdecs_end : COMMA ID EQ exp recdecs_end .  (reduce by rule 64)



	.	reduce by rule 64


state 150:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp fundec .  (reduce by rule 8)



	.	reduce by rule 8


state 151:

	tyfields_end : COMMA ID COLON ID . tyfields_end 

	COMMA	shift 140

	tyfields_end	goto 152

	.	reduce by rule 25


state 152:

	tyfields_end : COMMA ID COLON ID tyfields_end .  (reduce by rule 24)



	.	reduce by rule 24


state 153:


	EOF	accept


	.	error

491 of 1073 action table entries left after compaction
121 goto table entries
